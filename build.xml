<project xmlns:ivy="antlib:org.apache.ivy.ant" name="EuPathDB" default="create-plugin" basedir=".">

    <property name="version-regex-pattern" value=".*PLUGIN_VERSION\s+=\s+&quot;(\d+\.\d)&quot;;.*"/>

    <loadfile property="plugin.version" srcfile="src/com/biomatters/plugins/eupathdb/EuPathDBPlugin.java">
        <filterchain>
            <linecontainsregexp>
                <regexp pattern="${version-regex-pattern}"/>
            </linecontainsregexp>
            <replaceregex pattern="${version-regex-pattern}" replace="\1"/>
            <replacestring from="." to="_"/>
            <striplinebreaks/>
        </filterchain>
    </loadfile>

    <property name="plugin-name" value="com.biomatters.plugins.eupathdb.EuPathDBPlugin"/>
    <property name="short-plugin-name" value="EuPathDB_${plugin.version}"/>

    <property name="build" location="build"/>
    <property name="classes" location="classes"/>
    <property name="lib" location="lib"/>
    <property name="resources" location="resources"/>
    <property name="src" location="src"/>
    <property name="test.src" location="test"/>
    <property name="test.classes" location="test"/>
    <property name="test.data" location="testdata"/>
    <property name="report" location="report"/>
    <property name="GeneiousFiles" location="GeneiousFiles"/>

    <path id="classpath">
        <fileset dir="${lib}"/>
    </path>

    <!-- hook to enable the geneious build to build this plugin -->
    <target name="geneious-build" depends="retrieve-build-dependencies">
        <!-- The "target-to-run" property should be set in the subant call to this target. -->
        <ant antfile="../../build-opensource-plugins.xml" target="${target-to-run}">
            <reference refid="geneious.classpath.test"/>
            <reference refid="geneious.classpath"/>
        </ant>
    </target>

    <target name="create-plugin" depends="build-plugin">
        <zip zipfile="${build}/${short-plugin-name}.gplugin">
            <fileset dir="${build}">
                <include name="${plugin-name}/**/*"/>
            </fileset>
        </zip>
    </target>

    <target name="build-plugin" depends="clean,compile-plugin">
        <jar jarfile="${build}/${plugin-name}.jar">
            <fileset dir="${classes}"/>
        </jar>
        <mkdir dir="${build}/${plugin-name}"/>
        <copy todir="${build}/${plugin-name}">
            <fileset dir="${build}">
                <include name="${plugin-name}.jar"/>
            </fileset>
            <fileset dir="lib">
                <include name="*.jar"/>
                <!-- Exclude Javadoc and sources from build -->
                <exclude name="*-sources.jar"/>
                <exclude name="*-javadoc.jar"/>
                <!-- Exclude the Geneious Public API libraries because they are available at runtime -->
                <exclude name="GeneiousPublicAPI*.jar"/>
                <exclude name="jdom*.jar"/>
                <exclude name="jebl*.jar"/>
                <exclude name="guava*.jar"/>
                <!--Exclude test libs, not needed at runtime-->
                <exclude name="junit*.jar"/>
                <exclude name="hamcrest*.jar"/>
            </fileset>
            <fileset dir="resources"/>
        </copy>
    </target>

    <target name="compile-plugin" depends="prepare,retrieve-build-dependencies">
        <javac target="1.6" source="1.6" destdir="${classes}" debug="true">
            <classpath refid="classpath"/>
            <src path="${src}"/>
        </javac>
    </target>

    <target name="prepare">
        <mkdir dir="${lib}"/>
        <mkdir dir="${build}"/>
        <mkdir dir="${classes}"/>
        <mkdir dir="${test.classes}"/>
        <mkdir dir="${report}"/>
    </target>

    <target name="clean">
        <delete dir="${lib}"/>
        <delete dir="${build}"/>
        <delete dir="${classes}"/>
        <delete dir="${test.classes}"/>
        <delete dir="${report}"/>
        <delete dir="${GeneiousFiles}"/>
        <delete file="GeneiousFiles.zip"/>
    </target>

    <target name="compile-tests" depends="compile-plugin">
        <javac target="1.6" source="1.6" destdir="${test.classes}" debug="true">
            <classpath>
                <path refid="classpath"/>
                <pathelement location="${classes}"/>
            </classpath>
            <src path="${test.src}"/>
        </javac>
    </target>

    <target name="test" depends="compile-tests, retrieve-test-runtime-dependencies">
        <junit dir="GeneiousFiles" fork="true" maxmemory="1024M" printsummary="on" timeout="180000">
            <batchtest todir="${report}">
                <fileset dir="${test.classes}">
                    <include name="**/*Test.class"/>
                </fileset>
            </batchtest>
            <classpath>
                <path refid="classpath"/>
                <file file="${GeneiousFiles}/iSeek.jar"/>
                <fileset dir="${GeneiousFiles}/lib"/>
                <pathelement location="${classes}"/>
                <pathelement location="${resources}"/>
                <pathelement location="${test.classes}"/>
                <pathelement location="${test.data}"/>
                <pathelement location="${GeneiousFiles}/resources"/>
                <!--<pathelement location="${GeneiousFiles}/bundledPlugins"/>-->
                <fileset dir="${GeneiousFiles}/bundledPlugins">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
            <env key="DISPLAY" value=":0.0"/>
            <env key="DYLD_LIBRARY_PATH" value="/Library/Application Support/Geneious/Frameworks"/>
            <formatter type="xml"/>
            <jvmarg value="-Xms256M"/>
            <jvmarg value="-ea"/>
            <jvmarg value="-XX:MaxNewSize=40M"/>
            <jvmarg value="-XX:MaxPermSize=256M"/>
            <jvmarg value="-XX:ReservedCodeCacheSize=128m"/>
            <jvmarg value="-Xss512K"/>
            <sysproperty key="report.dir" value="${report}"/>
            <sysproperty key="user.dir" value="${build}"/>
        </junit>
    </target>

    <!-- setup reference to the Ivy Ant tasks library -->
    <path id="ivy.lib.path">
        <fileset dir="tools" includes="ivy*.jar"/>
    </path>


    <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>

    <!-- load ivy settings -->
    <ivy:settings file="ivysettings.xml" id="eupathdb.ivy.config"/>

    <target name="retrieve-build-dependencies" description="Retrieve dependencies with ivy">
        <ivy:retrieve conf="build" settingsref="eupathdb.ivy.config" pattern="lib/[artifact]-[type]-[revision].[ext]"/>
    </target>

    <target name="retrieve-test-runtime-dependencies" description="Retrieve the Geneious runtime for running the tests"
            unless="GeneiousFiles.exists">
        <ivy:retrieve conf="test" type="resource" settingsref="eupathdb.ivy.config"
                      pattern="${basedir}/[artifact].[ext]"/>
        <unzip src="GeneiousFiles.zip" dest="."/>
    </target>

    <condition property="GeneiousFiles.exists">
        <available file="${GeneiousFiles}" type="dir"/>
    </condition>

    <target name="clean-ivy-cache">
        <ivy:cleancache settingsRef="eupathdb.ivy.config"/>
    </target>
</project>